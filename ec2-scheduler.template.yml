AWSTemplateFormatVersion: '2010-09-09'
Description: 'EC2 Scheduler: This template installs an opt-in version of the EC2 Scheduler for automatically starting and stopping EC2 instances.'

Parameters:
  CustomTagName:
    Description: Custom Tag Name
    Default: 'scheduler:ec2-startstop'
    Type: String

  DefaultDaysActive:
    Description: Enter all, weekdays, or any combination of days (mon, tue, wed, thu, fri, sat, or sun) comma separated
    Default: all
    Type: String

  DefaultStartTime:
    Description: 'Default Start Time (UTC, 24-hour format)'
    Default: '0800'
    Type: String

  DefaultStopTime:
    Description: 'Default Start Time (UTC, 24-hour format)'
    Default: '1800'
    Type: String

  Schedule:
    Description: Schedule for CWE Scheduled Expression
    AllowedValues:
      - 1minute
      - 5minutes
      - 15minutes
      - 30minutes
      - 1hour
    Default: 5minutes
    Type: String

  CloudWatchMetrics:
    Description: Create CloudWatch Custom Metric
    AllowedValues:
      - Enabled
      - Disabled
    Default: Enabled
    Type: String

Mappings:
  Schedule:
    Time:
      15minutes: 'cron(0/15 * * * ? *)'
      1hour: 'cron(0 * * * ? *)'
      1minute: 'cron(0/1 * * * ? *)'
      30minutes: 'cron(0/30 * * * ? *)'
      5minutes: 'cron(0/5 * * * ? *)'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Tag Configuration
        Parameters:
          - CustomTagName
      - Label:
          default: CloudWatch Event Schedule Configuration
        Parameters:
          - Schedule
      - Label:
          default: Default Value Configuration
        Parameters:
          - DefaultStartTime
          - DefaultStopTime
          - DefaultDaysActive
      - Label:
          default: CloudWatch Custom Metric
        Parameters:
          - CloudWatchMetrics

Resources:
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ec2SchedulerOptIn
      Principal: events.amazonaws.com
      SourceArn: !GetAtt [ScheduledRule, Arn]

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule to trigger EC2Scheduler function on a schedule
      ScheduleExpression:
        Fn::FindInMap:
        - Schedule
        - Time
        - !Ref Schedule
      State: ENABLED
      Targets:
        - Arn: !GetAtt [ec2SchedulerOptIn, Arn]
          Id: TargetFunctionV1

  ec2SchedulerOptIn:
    Type: AWS::Lambda::Function
    Properties:
      Description: EC2 Scheduler Lambda function for automatically starting and stopping EC2 instances.
      Handler: ec2-scheduler.lambda_handler
      Role: !GetAtt [ec2SchedulerRole, Arn]
      Runtime: python2.7
      Timeout: '300'
      Code:
        S3Bucket: lambda.heller.com.au
        S3Key: ec2-scheduler.zip

  ec2SchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal: {Service: lambda.amazonaws.com}
      Path: /
      Policies:
        - PolicyName: ec2SchedulerPermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents'
                Effect: Allow
                Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*
              - Action:
                  - ec2:StartInstances
                  - ec2:StopInstances
                  - ec2:DescribeRegions
                  - ec2:DescribeInstances
                  - cloudwatch:PutMetricData
                  - cloudformation:DescribeStacks
                Effect: Allow
                Resource: '*'

Outputs:
  CloudWatchMetrics:
    Description: Create CloudWatch Custom Metric
    Value: !Ref CloudWatchMetrics
  CustomTagName:
    Description: Custom Tag Name
    Value: !Ref CustomTagName
  DefaultDaysActive:
    Description: Enter 'all', 'weekdays', or any combination of days ('mon', 'tue', 'wed', 'thu', 'fri', 'sat', or 'sun') comma separated
    Value: !Ref DefaultDaysActive
  DefaultStartTime:
    Description: Default Start Time (UTC, 24-hour format)
    Value: !Ref DefaultStartTime
  DefaultStopTime:
    Description: Default Start Time (UTC, 24-hour format)
    Value: !Ref DefaultStopTime
